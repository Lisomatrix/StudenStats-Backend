#MYSQL
spring.datasource.url=jdbc:mysql://localhost:3307/PAP_SERVER?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=usbw

#spring.datasource.url=jdbc:mysql://192.168.1.10:3307/PAP_SERVER?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT
#spring.datasource.username=lisomatrix
#spring.datasource.password=8899
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect

spring.datasource.maximum-pool-size=200
server.tomcat.accept-count=300
server.tomcat.max-threads=1000
#logging.level.org.springframework.data.r2dbc=DEBUG

#ACTUATOR
management.endpoints.web.exposure.include=*

#SQL AND HTTP DEBUG OPTIONS
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true

#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

#management.endpoint.health.show-details=always
#management.endpoint.metrics.enabled=true
#management.endpoints.web.cors.allowed-methods=*
#management.metrics.distribution.percentiles-histogram.http.server.requests=true

#MESSAGE BROKER RABBITMQ
#spring.rabbitmq.host = localhost
#spring.rabbitmq.port = 5672
#spring.rabbitmq.username = guest
#spring.rabbitmq.password = guest

#HTTP PORT
server.port=8090

#EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=test.emai.application@gmail.com
spring.mail.password=19890071989007
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#WEB APP COMPRESSION
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css/less

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=5KB
# Max file size.
spring.servlet.multipart.max-file-size=5MB
# Max Request Size
spring.servlet.multipart.max-request-size=5MB


#server.ssl.key-store: mykeystore.jks
# server.ssl.key-store: pap_server.jks
# server.ssl.key-store-password: 88998899
# server.ssl.keyStoreType: JKS
server.ssl.enabled=true
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=pap_server.p12
# The password used to generate the certificate
server.ssl.key-store-password=root
# The alias mapped to the certificate

spring.main.allow-bean-definition-overriding=true

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# Maximum time the response should be cached (in seconds)
spring.resources.cache.cachecontrol.max-age=120s

# The resources are private and intended for a single user. They must not be stored by a shared cache (e.g CDN).
spring.resources.cache.cachecontrol.cache-private=false

# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads